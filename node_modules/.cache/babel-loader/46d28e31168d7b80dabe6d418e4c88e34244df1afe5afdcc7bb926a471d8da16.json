{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\Trung\\\\QLNET\\\\frontend\\\\src\\\\pages\\\\FoodManager\\\\FoodManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport FoodManagerForm from '../../';\nimport './FoodManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodManager = () => {\n  _s();\n  const [foods, setFoods] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingFood, setEditingFood] = useState(null);\n  const [groupedFoods, setGroupedFoods] = useState({});\n  const [isOpen, setIsOpen] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all food items\n  const fetchFoods = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('http://localhost:5000/api/foods');\n      setFoods(response.data);\n    } catch (error) {\n      setError('Error fetching foods. Please try again.');\n      console.error('Error fetching foods:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Group food items by their category/typeFood\n  useEffect(() => {\n    const grouped = foods.reduce((acc, food) => {\n      const type = food.typeFood || 'Others'; // Handle cases where typeFood might be empty\n      if (!acc[type]) {\n        acc[type] = [];\n      }\n      acc[type].push(food);\n      return acc;\n    }, {});\n    setGroupedFoods(grouped);\n  }, [foods]);\n\n  // Create a new food item or update an existing one\n  const handleFormSubmit = async foodData => {\n    setLoading(true);\n    setError(null);\n    const url = editingFood ? `http://localhost:5000/api/foods/${editingFood._id}` : 'http://localhost:5000/api/foods';\n    const method = editingFood ? 'put' : 'post';\n    try {\n      await axios({\n        method,\n        url,\n        data: foodData,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      fetchFoods(); // Refresh the list\n      resetForm();\n    } catch (error) {\n      setError('Error saving food. Please try again.');\n      console.error('Error saving food:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a food item\n  const deleteFood = async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      await axios.delete(`http://localhost:5000/api/foods/${id}`);\n      fetchFoods(); // Refresh the list\n    } catch (error) {\n      setError('Error deleting food. Please try again.');\n      console.error('Error deleting food:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Reset form fields\n  const resetForm = () => {\n    setEditingFood(null);\n    setShowForm(false);\n  };\n\n  // Toggle food list display\n  const toggleFoodList = type => {\n    setIsOpen(prevState => ({\n      ...prevState,\n      [type]: !prevState[type]\n    }));\n  };\n  useEffect(() => {\n    fetchFoods();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"FMTitle\",\n      children: \"Food Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowForm(true);\n        resetForm();\n      },\n      children: \"Add New Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this), \" \", showForm && /*#__PURE__*/_jsxDEV(FoodManagerForm, {\n      editingFood: editingFood,\n      onSubmit: handleFormSubmit,\n      onCancel: resetForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), Object.entries(groupedFoods).map(([type, foods]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        onClick: () => toggleFoodList(type),\n        className: \"cursor-pointer\",\n        children: [type, \" (\", foods.length, \") \", isOpen[type] ? '▲' : '▼']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), !isOpen[type] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-4\",\n        children: foods.map(food => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-4 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: food.image,\n            alt: food.name,\n            className: \"w-full h-32 object-cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: food.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [food.price, \" VND\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingFood(food);\n              setShowForm(true);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteFood(food._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this)]\n        }, food._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this)]\n    }, type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(FoodManager, \"zLZubky1ubLE3n0U4fAlNMaI2JQ=\");\n_c = FoodManager;\nexport default FoodManager;\nvar _c;\n$RefreshReg$(_c, \"FoodManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","FoodManagerForm","jsxDEV","_jsxDEV","FoodManager","_s","foods","setFoods","showForm","setShowForm","editingFood","setEditingFood","groupedFoods","setGroupedFoods","isOpen","setIsOpen","loading","setLoading","error","setError","fetchFoods","response","get","data","console","grouped","reduce","acc","food","type","typeFood","push","handleFormSubmit","foodData","url","_id","method","headers","resetForm","deleteFood","id","delete","toggleFoodList","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onCancel","Object","entries","map","length","src","image","alt","name","price","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Downloads/Trung/QLNET/frontend/src/pages/FoodManager/FoodManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport FoodManagerForm from '../../';\r\nimport './FoodManager.css';\r\n\r\nconst FoodManager = () => {\r\n    const [foods, setFoods] = useState([]);\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [editingFood, setEditingFood] = useState(null);\r\n    const [groupedFoods, setGroupedFoods] = useState({});\r\n    const [isOpen, setIsOpen] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch all food items\r\n    const fetchFoods = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/foods');\r\n            setFoods(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching foods. Please try again.');\r\n            console.error('Error fetching foods:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Group food items by their category/typeFood\r\n    useEffect(() => {\r\n        const grouped = foods.reduce((acc, food) => {\r\n            const type = food.typeFood || 'Others'; // Handle cases where typeFood might be empty\r\n            if (!acc[type]) {\r\n                acc[type] = [];\r\n            }\r\n            acc[type].push(food);\r\n            return acc;\r\n        }, {});\r\n        setGroupedFoods(grouped);\r\n    }, [foods]);\r\n\r\n    // Create a new food item or update an existing one\r\n    const handleFormSubmit = async (foodData) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        const url = editingFood ? `http://localhost:5000/api/foods/${editingFood._id}` : 'http://localhost:5000/api/foods';\r\n        const method = editingFood ? 'put' : 'post';\r\n\r\n        try {\r\n            await axios({\r\n                method,\r\n                url,\r\n                data: foodData,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            fetchFoods(); // Refresh the list\r\n            resetForm();\r\n        } catch (error) {\r\n            setError('Error saving food. Please try again.');\r\n            console.error('Error saving food:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Delete a food item\r\n    const deleteFood = async (id) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/foods/${id}`);\r\n            fetchFoods(); // Refresh the list\r\n        } catch (error) {\r\n            setError('Error deleting food. Please try again.');\r\n            console.error('Error deleting food:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Reset form fields\r\n    const resetForm = () => {\r\n        setEditingFood(null);\r\n        setShowForm(false);\r\n    };\r\n\r\n    // Toggle food list display\r\n    const toggleFoodList = (type) => {\r\n        setIsOpen((prevState) => ({ ...prevState, [type]: !prevState[type] }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFoods();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"px-12\">\r\n            <h1 className=\"FMTitle\">Food Management</h1>\r\n            <button onClick={() => { setShowForm(true); resetForm(); }}>Add New Food</button>\r\n            {error && <p className=\"text-red-500\">{error}</p>} {/* Display error messages */}\r\n            {loading && <p>Loading...</p>} {/* Display loading state */}\r\n            {showForm && (\r\n                <FoodManagerForm\r\n                    editingFood={editingFood}\r\n                    onSubmit={handleFormSubmit}\r\n                    onCancel={resetForm}\r\n                />\r\n            )}\r\n            {Object.entries(groupedFoods).map(([type, foods]) => (\r\n                <div key={type} className=\"my-4\">\r\n                    <h5 onClick={() => toggleFoodList(type)} className=\"cursor-pointer\">\r\n                        {type} ({foods.length}) {isOpen[type] ? '▲' : '▼'}\r\n                    </h5>\r\n                    {!isOpen[type] && (\r\n                        <div className=\"flex flex-wrap gap-4\">\r\n                            {foods.map((food) => (\r\n                                <div key={food._id} className=\"border p-4 rounded-md\">\r\n                                    <img src={food.image} alt={food.name} className=\"w-full h-32 object-cover\" />\r\n                                    <p>{food.name}</p>\r\n                                    <p>{food.price} VND</p>\r\n                                    <button onClick={() => { setEditingFood(food); setShowForm(true); }}>Edit</button>\r\n                                    <button onClick={() => deleteFood(food._id)}>Delete</button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoodManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}