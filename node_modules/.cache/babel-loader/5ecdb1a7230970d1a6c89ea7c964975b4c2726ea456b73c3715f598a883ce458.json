{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\Trung\\\\QLNET\\\\frontend\\\\src\\\\componets\\\\FoodList\\\\FoodList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./FoodList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodList = ({\n  foods\n}) => {\n  _s();\n  // State to toggle the visibility of the food items\n  const [openGroups, setOpenGroups] = useState({});\n  // Group the food items by their typeFood\n  const groupByTypeFood = foods => {\n    return foods.reduce((acc, food) => {\n      const type = food.typeFood;\n      if (!acc[type]) {\n        acc[type] = [];\n      }\n      acc[type].push(food);\n      return acc;\n    }, {});\n  };\n\n  // Toggle function to show/hide each food group\n  const toggleGroup = typeFood => {\n    setOpenGroups(prevState => ({\n      ...prevState,\n      [typeFood]: !prevState[typeFood]\n    }));\n  };\n  const groupedFoods = groupByTypeFood(foods);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: Object.keys(groupedFoods).map(typeFood => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-3\",\n        onClick: () => toggleGroup(typeFood),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [typeFood, \" \", openGroups[typeFood] ? '▲' : '▼']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `collapse ${openGroups[typeFood] ? 'show' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: Food.map(food => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mx-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card border-0\",\n              children: [food.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: food.image,\n                className: \"card-img-top\",\n                alt: food.name,\n                width: \"100\",\n                height: \"150\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body p-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"card-title text-uppercase\",\n                  children: food.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-warning font-weight-bold\",\n                  children: [food.price, \" VND\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)\n          }, food._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, typeFood, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(FoodList, \"t+cbTssx8U0O4gbugg7m2ikkEnw=\");\n_c = FoodList;\nexport default FoodList;\nvar _c;\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FoodList","foods","_s","openGroups","setOpenGroups","groupByTypeFood","reduce","acc","food","type","typeFood","push","toggleGroup","prevState","groupedFoods","className","children","Object","keys","map","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","Food","image","src","alt","name","width","height","price","_id","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Downloads/Trung/QLNET/frontend/src/componets/FoodList/FoodList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./FoodList.css\";\r\n\r\nconst FoodList = ({ foods }) => {\r\n    // State to toggle the visibility of the food items\r\n    const [openGroups, setOpenGroups] = useState({});\r\n    // Group the food items by their typeFood\r\n    const groupByTypeFood = (foods) => {\r\n        return foods.reduce((acc, food) => {\r\n            const type = food.typeFood;\r\n            if (!acc[type]) {\r\n                acc[type] = [];\r\n            }\r\n            acc[type].push(food);\r\n            return acc;\r\n        }, {});\r\n    };\r\n\r\n    // Toggle function to show/hide each food group\r\n    const toggleGroup = (typeFood) => {\r\n        setOpenGroups(prevState => ({\r\n            ...prevState,\r\n            [typeFood]: !prevState[typeFood]\r\n        }));\r\n    };\r\n\r\n    const groupedFoods = groupByTypeFood(foods);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {Object.keys(groupedFoods).map((typeFood) => (\r\n                <div key={typeFood} className=\"col-sm-12 mb-4\">\r\n                    {/* Title for each food group */}\r\n                    <h5 className=\"mb-3\" onClick={() => toggleGroup(typeFood)} style={{ cursor: 'pointer' }}>\r\n                        {typeFood} {openGroups[typeFood] ? '▲' : '▼'}\r\n                    </h5>\r\n\r\n                    {/* Conditional rendering for each group */}\r\n                    <div className={`collapse ${openGroups[typeFood] ? 'show' : ''}`}>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            {Food.map((food) => (\r\n                                <div key={food._id} className=\"text-center mx-2\">\r\n                                    <div className=\"card border-0\">\r\n                                        {food.image && (\r\n                                            <img src={food.image} className=\"card-img-top\" alt={food.name} width=\"100\" height=\"150\" />\r\n                                        )}\r\n                                        <div className=\"card-body p-2\">\r\n                                            <h6 className=\"card-title text-uppercase\">{food.name}</h6>\r\n                                            <p className=\"text-warning font-weight-bold\">{food.price} VND</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FoodList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}